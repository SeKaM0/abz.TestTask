{"version":3,"sources":["components/Intro/Intro.tsx","images/Logo.svg","components/Header/Header.tsx","components/DevelopersList/DevelopersList.tsx","api/api.ts","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Intro","className","href","Header","src","logo","alt","DevelopersList","users","showMore","nextPage","id","map","user","photo","name","length","substring","position","email","phone","type","onClick","API_URL_USERS","getData","a","url","fetch","response","json","getPositions","positions","uploadUser","data","responseToken","token","method","body","headers","responseData","Form","updateUsers","SUPPORTED_FORMATS","validationSchema","yup","shape","required","max","matches","test","value","includes","initialValues","validateOnBlur","onSubmit","values","action","Data","FormData","append","resetForm","setFieldValue","errors","touched","handleChange","handleBlur","handleSubmit","htmlFor","classNames","onChange","onBlur","placeholder","elem","checked","event","target","files","App","useState","setUsers","setNextPage","userPosition","setUserPosition","getUserPositions","gettingPositions","getUsers","gettingUsers","links","next_url","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aec31861.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Intro: React.FC = () => {\n  return (\n    <section className=\"intro\">\n      <div className=\"intro__content\">\n        <h1 className=\"intro__title\">Test assignment for front-end developer</h1>\n        <p className=\"intro__subtitle\">\n          What defines a good front-end developer is\n          one that has skilled knowledge of HTML, CSS, JS\n          with a vast understanding of User design thinking\n          as they&apos;ll be building web interfaces with accessibility in mind.\n          They should also be excited to learn, as the world of Front-End\n          Development keeps evolving.\n        </p>\n        <a href=\"#signUp\" className=\"intro__button button\">\n          Sign up\n        </a>\n      </div>\n    </section>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/Logo.8bb55362.svg\";","import React from 'react';\nimport logo from '../../images/Logo.svg';\n\nexport const Header: React.FC = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__container\">\n        <img src={logo} alt=\"Logo\" className=\"header__logo\" />\n        <nav className=\"nav\">\n          <ul className=\"nav__menu\">\n            <li className=\"nav__item\">\n              <a href=\"#users\" className=\"nav__link button\">Users</a>\n            </li>\n            <li className=\"nav__item\">\n              <a href=\"#signUp\" className=\"nav__link button\">Sign up</a>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  users: User[],\n  showMore: () => void,\n  nextPage:string\n};\n\nexport const DevelopersList: React.FC<Props> = ({ users, showMore, nextPage }) => {\n  return (\n    <section className=\"devs\" id=\"users\">\n      <div className=\"container\">\n        <h1 className=\"devs__title\">Working with GET request</h1>\n        <div className=\"devs__list\">\n          {users.map(user => (\n            <div className=\"devs__card card\" key={user.id}>\n              <img src={user.photo} alt={user.name} className=\"card__image\" />\n              <p className=\"card__title\">{user.name.length > 40 ? `${user.name.substring(0, user.name.length / 2)}...` : user.name}</p>\n              <div className=\"card__subtitle\">\n                <p className=\"card__position\">{user.position}</p>\n                <p className=\"card__email\">{user.email.length > 40 ? `${user.email.substring(0, user.email.length / 2)}...` : user.email}</p>\n                <p className=\"card__phone\">{user.phone}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      {nextPage ? (\n        <button type=\"button\" className=\"devs__button button\" onClick={() => showMore()}>\n          Show more\n        </button>\n      ) : ''}\n    </section>\n  );\n};\n","const API_URL_USERS = 'https://frontend-test-assignment-api.abz.agency/api/v1/users?page=1&count=6';\nconst API_URL_POSITIONS = 'https://frontend-test-assignment-api.abz.agency/api/v1/positions';\nconst API_POST = 'https://frontend-test-assignment-api.abz.agency/api/v1/users';\nconst API_TOKEN = 'https://frontend-test-assignment-api.abz.agency/api/v1/token';\n\nexport const getData = async (url: string = API_URL_USERS) => {\n  const response = await fetch(url);\n\n  const users = await response.json();\n\n  return users;\n};\n\nexport const getPositions = async () => {\n  const response = await fetch(API_URL_POSITIONS);\n\n  const positions = await response.json();\n\n  return positions.positions;\n};\n\nexport const uploadUser = async (data: FormData) => {\n  const responseToken = await fetch(API_TOKEN);\n  const token = await responseToken.json();\n\n  const response = await fetch(API_POST, {\n    method: 'POST',\n    body: data,\n    headers: {\n      // eslint-disable-next-line quote-props\n      'Token': token.token,\n    },\n  });\n\n  const responseData = await response.json();\n\n  return responseData;\n};\n","/* eslint-disable no-console */\nimport React, {\n// ChangeEvent,\n// FormEvent,\n// useState,\n} from 'react';\nimport { Field, Formik } from 'formik';\nimport classNames from 'classnames';\nimport * as yup from 'yup';\nimport { uploadUser } from '../../api/api';\n\ntype Props = {\n  positions: Position[]\n  updateUsers: () => void\n};\n\nexport const Form: React.FC<Props> = ({ positions, updateUsers }) => {\n  const SUPPORTED_FORMATS = [\n    'image/jpg',\n    'image/jpeg',\n  ];\n\n  const validationSchema = yup.object().shape({\n    name: yup.string().required('It`s required field').max(60, 'Not more than 60'),\n    email: yup.string().email('Invalid email').required('It`s required field'),\n    phone: yup.string().matches(/(?:\\+38)?(0\\d{9})+/, 'Invalid phone number expected +380...').required('It`s required field').max(13, 'Invalid phone number length'),\n    position: yup.string().required('It`s required field'),\n    photo: yup\n      .mixed()\n      .required('A file is required')\n      .test(\n        'fileFormat',\n        'Unsupported Format expected jpg/jpeg',\n        value => value && SUPPORTED_FORMATS.includes(value.type),\n      ),\n  });\n\n  return (\n    <section className=\"post\" id=\"signUp\">\n      <div className=\"container\">\n        <h1 className=\"post__title\">Working with POST request</h1>\n        <div className=\"post__form form\">\n          <Formik\n            initialValues={{\n              name: '',\n              email: '',\n              phone: '',\n              position: '',\n              photo: '',\n            }}\n            validateOnBlur\n            validationSchema={validationSchema}\n            onSubmit={async (values, action) => {\n              const {\n                name, email, phone, photo, position,\n              } = values;\n\n              const Data = new FormData();\n\n              Data.append('position_id', `${position}`);\n              Data.append('name', name);\n              Data.append('email', email);\n              Data.append('phone', phone);\n              Data.append('photo', photo);\n\n              await uploadUser(Data);\n              updateUsers();\n              action.resetForm();\n            }}\n          >\n            {({\n              setFieldValue,\n              values, errors, touched, handleChange, handleBlur, handleSubmit,\n            }) => (\n              <form onSubmit={handleSubmit} className=\"form__content\">\n                <label\n                  htmlFor=\"name\"\n                  className={classNames('form__field', {\n                    'form__field-error': touched.name && errors.name,\n                  })}\n                >\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    value={values.name}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Name\"\n                  />\n                  <span className={classNames('placeholder', {\n                    'placeholder-error': touched.name && errors.name,\n                  })}\n                  >\n                    Your name\n                  </span>\n                  {touched.name && errors.name && <p className=\"error field-error\">{errors.name}</p>}\n                </label>\n\n                <label\n                  htmlFor=\"email\"\n                  className={classNames('form__field', {\n                    'form__field-error': touched.email && errors.email,\n                  })}\n                >\n                  <input\n                    type=\"text\"\n                    id=\"email\"\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Email\"\n                  />\n                  <span className={classNames('placeholder', {\n                    'placeholder-error': touched.email && errors.email,\n                  })}\n                  >\n                    Email\n                  </span>\n                  {touched.email && errors.email && <p className=\"error field-error\">{errors.email}</p>}\n                </label>\n\n                <label\n                  htmlFor=\"phone\"\n                  className={classNames('form__field', {\n                    'form__field-error': touched.phone && errors.phone,\n                  })}\n                >\n                  <input\n                    type=\"tel\"\n                    id=\"phone\"\n                    value={values.phone}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"+380...\"\n                  />\n                  <span className={classNames('placeholder', {\n                    'placeholder-error': touched.phone && errors.phone,\n                  })}\n                  >\n                    Phone\n                  </span>\n                  {touched.phone && errors.phone && <p className=\"error field-error\">{errors.phone}</p>}\n                </label>\n\n                <div className=\"form__position\">\n                  <span className=\"form__position-title\">Select your position</span>\n                  {positions.map(elem => (\n                    <div key={elem.id} className=\"radio\">\n                      <Field\n                        type=\"radio\"\n                        value={elem.id}\n                        id={elem.name}\n                        checked={+values.position === elem.id}\n                        className=\"radio__input\"\n                        onChange={() => setFieldValue('position', elem.id)}\n                      />\n                      <label htmlFor={elem.name} className=\"radio__label\">\n                        {elem.name}\n                      </label>\n                    </div>\n                  ))}\n                  {touched.position && errors.position && <p className=\"error form__position-error\">{errors.position}</p>}\n                </div>\n\n                <label className=\"uploadLabel\" htmlFor=\"photo\">\n                  <input\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    id=\"photo\"\n                    name=\"photo\"\n                    onChange={(event) => {\n                      if (event.target.files) {\n                        setFieldValue('photo', event.target.files[0]);\n                      }\n                    }}\n                  />\n                  <span className={classNames('uploadText', {\n                    'uploadText-error': touched.photo && errors.photo,\n                  })}\n                  >\n                    Upload\n                  </span>\n                  <span className={classNames('uploadText2', {\n                    'uploadText2-error': touched.photo && errors.photo,\n                  })}\n                  >\n                    {values.photo ? 'Photo is uploaded' : 'Upload your photo'}\n                  </span>\n                  {touched.photo && errors.photo && <p className=\"error uploadLabel-error\">{errors.photo}</p>}\n                </label>\n\n                <button\n                  type=\"submit\"\n                  className=\"button form__button\"\n                >\n                  Sign up\n                </button>\n              </form>\n            )}\n          </Formik>\n\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './styles/main.scss';\nimport { Intro } from './components/Intro/Intro';\nimport { Header } from './components/Header/Header';\nimport { DevelopersList } from './components/DevelopersList/DevelopersList';\nimport { getData, getPositions } from './api/api';\nimport { Form } from './components/Form/Form';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[] | null>(null);\n  const [nextPage, setNextPage] = useState<string>('');\n  const [userPosition, setUserPosition] = useState<Position[] | null>(null);\n\n  const getUserPositions = async () => {\n    const gettingPositions: Position[] = await getPositions();\n\n    setUserPosition(gettingPositions);\n  };\n\n  const getUsers = async () => {\n    if (!users) {\n      const gettingUsers: Data = await getData();\n\n      setUsers(gettingUsers.users);\n      setNextPage(gettingUsers.links.next_url);\n    } else {\n      const gettingUsers: Data = await getData(nextPage);\n\n      setUsers([\n        ...users,\n        ...gettingUsers.users,\n      ]);\n      setNextPage(gettingUsers.links.next_url);\n    }\n  };\n\n  const showMore = () => {\n    getUsers();\n  };\n\n  const updateUsers = async () => {\n    const gettingUsers: Data = await getData();\n\n    setUsers(gettingUsers.users);\n    setNextPage(gettingUsers.links.next_url);\n  };\n\n  useEffect(() => {\n    getUsers();\n    getUserPositions();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <Intro />\n      {users && <DevelopersList users={users} showMore={showMore} nextPage={nextPage} />}\n      {userPosition && <Form positions={userPosition} updateUsers={updateUsers} />}\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}