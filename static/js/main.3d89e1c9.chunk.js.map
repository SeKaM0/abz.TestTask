{"version":3,"sources":["components/Intro/Intro.tsx","images/Logo.svg","components/Header/Header.tsx","components/DevelopersList/DevelopersList.tsx","api/api.ts","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Intro","className","href","Header","src","logo","alt","DevelopersList","users","showMore","nextPage","id","map","user","photo","name","length","substring","position","email","phone","type","onClick","API_URL_USERS","getData","a","url","fetch","response","json","getPositions","positions","uploadUser","data","responseToken","token","method","body","headers","responseData","Form","updateUsers","validationSchema","yup","shape","required","max","matches","initialValues","validateOnBlur","onSubmit","values","action","Data","FormData","append","resetForm","setFieldValue","errors","touched","handleChange","handleBlur","handleSubmit","htmlFor","classNames","value","onChange","onBlur","placeholder","elem","checked","event","target","files","App","useState","setUsers","setNextPage","userPosition","setUserPosition","getUserPositions","gettingPositions","getUsers","gettingUsers","links","next_url","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d89e1c9.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Intro: React.FC = () => {\n  return (\n    <section className=\"intro\">\n      <div className=\"intro__content\">\n        <h1 className=\"intro__title\">Test assignment for front-end developer</h1>\n        <p className=\"intro__subtitle\">\n          What defines a good front-end developer is\n          one that has skilled knowledge of HTML, CSS, JS\n          with a vast understanding of User design thinking\n          as they&apos;ll be building web interfaces with accessibility in mind.\n          They should also be excited to learn, as the world of Front-End\n          Development keeps evolving.\n        </p>\n        <a href=\"#q\" className=\"intro__button button\">\n          Sign up\n        </a>\n      </div>\n    </section>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/Logo.8bb55362.svg\";","import React from 'react';\nimport logo from '../../images/Logo.svg';\n\nexport const Header: React.FC = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__container\">\n        <img src={logo} alt=\"Logo\" className=\"header__logo\" />\n        <nav className=\"nav\">\n          <ul className=\"nav__menu\">\n            <li className=\"nav__item\">\n              <a href=\"#users\" className=\"nav__link button\">Users</a>\n            </li>\n            <li className=\"nav__item\">\n              <a href=\"#signUp\" className=\"nav__link button\">Sign up</a>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  users: User[],\n  showMore: () => void,\n  nextPage:string\n};\n\nexport const DevelopersList: React.FC<Props> = ({ users, showMore, nextPage }) => {\n  return (\n    <section className=\"devs\" id=\"users\">\n      <div className=\"container\">\n        <h1 className=\"devs__title\">Working with GET request</h1>\n        <div className=\"devs__list\">\n          {users.map(user => (\n            <div className=\"devs__card card\" key={user.id}>\n              <img src={user.photo} alt={user.name} className=\"card__image\" />\n              <p className=\"card__title\">{user.name.length > 40 ? `${user.name.substring(0, user.name.length / 2)}...` : user.name}</p>\n              <div className=\"card__subtitle\">\n                <p className=\"card__position\">{user.position}</p>\n                <p className=\"card__email\">{user.email.length > 40 ? `${user.email.substring(0, user.email.length / 2)}...` : user.email}</p>\n                <p className=\"card__phone\">{user.phone}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      {nextPage ? (\n        <button type=\"button\" className=\"devs__button button\" onClick={() => showMore()}>\n          Show more\n        </button>\n      ) : ''}\n    </section>\n  );\n};\n","const API_URL_USERS = 'https://frontend-test-assignment-api.abz.agency/api/v1/users?page=1&count=6';\nconst API_URL_POSITIONS = 'https://frontend-test-assignment-api.abz.agency/api/v1/positions';\nconst API_POST = 'https://frontend-test-assignment-api.abz.agency/api/v1/users';\nconst API_TOKEN = 'https://frontend-test-assignment-api.abz.agency/api/v1/token';\n\nexport const getData = async (url: string = API_URL_USERS) => {\n  const response = await fetch(url);\n\n  const users = await response.json();\n\n  return users;\n};\n\nexport const getPositions = async () => {\n  const response = await fetch(API_URL_POSITIONS);\n\n  const positions = await response.json();\n\n  return positions.positions;\n};\n\nexport const uploadUser = async (data: FormData) => {\n  const responseToken = await fetch(API_TOKEN);\n  const token = await responseToken.json();\n\n  const response = await fetch(API_POST, {\n    method: 'POST',\n    body: data,\n    headers: {\n      // eslint-disable-next-line quote-props\n      'Token': token.token,\n    },\n  });\n\n  const responseData = await response.json();\n\n  return responseData;\n};\n","/* eslint-disable no-console */\nimport React, {\n// ChangeEvent,\n// FormEvent,\n// useState,\n} from 'react';\nimport { Field, Formik } from 'formik';\nimport classNames from 'classnames';\nimport * as yup from 'yup';\nimport { uploadUser } from '../../api/api';\n\ntype Props = {\n  positions: Position[]\n  updateUsers: () => void\n};\n\nexport const Form: React.FC<Props> = ({ positions, updateUsers }) => {\n  const validationSchema = yup.object().shape({\n    name: yup.string().required('It`s required field').max(60, 'Not more than 60'),\n    email: yup.string().email('Invalid email').required('It`s required field'),\n    phone: yup.string().matches(/(?:\\+38)?(0\\d{9})+/, 'Invalid phone number expected +380...').required('It`s required field').max(13, 'Invalid phone number length'),\n    position: yup.string().required('It`s required field'),\n    photo: yup.mixed().required('File is required'),\n  });\n\n  return (\n    <section className=\"post\" id=\"signUp\">\n      <div className=\"container\">\n        <h1 className=\"post__title\">Working with POST request</h1>\n        <div className=\"post__form form\">\n          <Formik\n            initialValues={{\n              name: '',\n              email: '',\n              phone: '',\n              position: '',\n              photo: '',\n            }}\n            validateOnBlur\n            validationSchema={validationSchema}\n            onSubmit={async (values, action) => {\n              const {\n                name, email, phone, photo, position,\n              } = values;\n\n              const Data = new FormData();\n\n              Data.append('position_id', `${position}`);\n              Data.append('name', name);\n              Data.append('email', email);\n              Data.append('phone', phone);\n              Data.append('photo', photo);\n\n              await uploadUser(Data);\n              updateUsers();\n              action.resetForm();\n            }}\n          >\n            {({\n              setFieldValue,\n              values, errors, touched, handleChange, handleBlur, handleSubmit,\n            }) => (\n              <form onSubmit={handleSubmit} className=\"form__content\">\n                <label\n                  htmlFor=\"name\"\n                  className={classNames('form__field', {\n                    'form__field-error': touched.name && errors.name,\n                  })}\n                >\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    value={values.name}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Name\"\n                  />\n                  <span className={classNames('placeholder', {\n                    'placeholder-error': touched.name && errors.name,\n                  })}\n                  >\n                    Your name\n                  </span>\n                  {touched.name && errors.name && <p className=\"error field-error\">{errors.name}</p>}\n                </label>\n\n                <label\n                  htmlFor=\"email\"\n                  className={classNames('form__field', {\n                    'form__field-error': touched.email && errors.email,\n                  })}\n                >\n                  <input\n                    type=\"text\"\n                    id=\"email\"\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"Email\"\n                  />\n                  <span className={classNames('placeholder', {\n                    'placeholder-error': touched.email && errors.email,\n                  })}\n                  >\n                    Email\n                  </span>\n                  {touched.email && errors.email && <p className=\"error field-error\">{errors.email}</p>}\n                </label>\n\n                <label\n                  htmlFor=\"phone\"\n                  className={classNames('form__field', {\n                    'form__field-error': touched.phone && errors.phone,\n                  })}\n                >\n                  <input\n                    type=\"tel\"\n                    id=\"phone\"\n                    value={values.phone}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder=\"+380...\"\n                  />\n                  <span className={classNames('placeholder', {\n                    'placeholder-error': touched.phone && errors.phone,\n                  })}\n                  >\n                    Phone\n                  </span>\n                  {touched.phone && errors.phone && <p className=\"error field-error\">{errors.phone}</p>}\n                </label>\n\n                <div className=\"form__position\">\n                  <span className=\"form__position-title\">Select your position</span>\n                  {positions.map(elem => (\n                    <div key={elem.id} className=\"radio\">\n                      <Field\n                        type=\"radio\"\n                        value={elem.id}\n                        id={elem.name}\n                        checked={+values.position === elem.id}\n                        className=\"radio__input\"\n                        onChange={() => setFieldValue('position', elem.id)}\n                      />\n                      <label htmlFor={elem.name} className=\"radio__label\">\n                        {elem.name}\n                      </label>\n                    </div>\n                  ))}\n                  {touched.position && errors.position && <p className=\"error form__position-error\">{errors.position}</p>}\n                </div>\n\n                <label className=\"uploadLabel\" htmlFor=\"photo\">\n                  <input\n                    type=\"file\"\n                    className=\"uploadButton\"\n                    id=\"photo\"\n                    name=\"photo\"\n                    onChange={(event) => {\n                      if (event.target.files) {\n                        setFieldValue('photo', event.target.files[0]);\n                      }\n                    }}\n                  />\n                  <span className={classNames('uploadText', {\n                    'uploadText-error': touched.photo && errors.photo,\n                  })}\n                  >\n                    Upload\n                  </span>\n                  <span className={classNames('uploadText2', {\n                    'uploadText2-error': touched.photo && errors.photo,\n                  })}\n                  >\n                    {values.photo ? 'Photo is uploaded' : 'Upload your photo'}\n                  </span>\n                  {touched.photo && errors.photo && <p className=\"error uploadLabel-error\">{errors.photo}</p>}\n                </label>\n\n                <button\n                  type=\"submit\"\n                  className=\"button form__button\"\n                >\n                  Sign up\n                </button>\n              </form>\n            )}\n          </Formik>\n\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './styles/main.scss';\nimport { Intro } from './components/Intro/Intro';\nimport { Header } from './components/Header/Header';\nimport { DevelopersList } from './components/DevelopersList/DevelopersList';\nimport { getData, getPositions } from './api/api';\nimport { Form } from './components/Form/Form';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[] | null>(null);\n  const [nextPage, setNextPage] = useState<string>('');\n  const [userPosition, setUserPosition] = useState<Position[] | null>(null);\n\n  const getUserPositions = async () => {\n    const gettingPositions: Position[] = await getPositions();\n\n    setUserPosition(gettingPositions);\n  };\n\n  const getUsers = async () => {\n    if (!users) {\n      const gettingUsers: Data = await getData();\n\n      setUsers(gettingUsers.users);\n      setNextPage(gettingUsers.links.next_url);\n    } else {\n      const gettingUsers: Data = await getData(nextPage);\n\n      setUsers([\n        ...users,\n        ...gettingUsers.users,\n      ]);\n      setNextPage(gettingUsers.links.next_url);\n    }\n  };\n\n  const showMore = () => {\n    getUsers();\n  };\n\n  const updateUsers = async () => {\n    const gettingUsers: Data = await getData();\n\n    setUsers(gettingUsers.users);\n    setNextPage(gettingUsers.links.next_url);\n  };\n\n  useEffect(() => {\n    getUsers();\n    getUserPositions();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <Intro />\n      {users && <DevelopersList users={users} showMore={showMore} nextPage={nextPage} />}\n      {userPosition && <Form positions={userPosition} updateUsers={updateUsers} />}\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}